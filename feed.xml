<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nate McMaster</title>
    <description>Infrequent blog posts about software development, lifehacks, opinion, etc.
</description>
    <link>http://www.natemcmaster.com/</link>
    <atom:link href="http://www.natemcmaster.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 19 May 2016 00:58:44 -0700</pubDate>
    <lastBuildDate>Thu, 19 May 2016 00:58:44 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>NuGet 3: The Runtime ID Graph</title>
        <description>&lt;p&gt;If you have ever cracked open* a NuGet package such as .NET Core’s 
&lt;a href=&quot;https://www.nuget.org/packages/System.IO.Compression/&quot;&gt;System.IO.Compression&lt;/a&gt;,
you have may have noticed that the package includes a folder named “runtimes”.
What is the folder and how is it used?&lt;/p&gt;

&lt;p&gt;NuGet’s official documentation only comments on runtimes briefly. 
See &lt;a href=&quot;https://docs.nuget.org/consume/projectjson-format#runtimes&quot;&gt;https://docs.nuget.org/consume/projectjson-format#runtimes&lt;/a&gt;. The documentation
doesn’t detail how runtimes work in NuGet 3 under the hood. In this post, I’ll share
some of the internal workings of NuGet 3 and “runtimes”.&lt;/p&gt;

&lt;p&gt;*Pro-tip: on Windows, rename any *.nupkg file to *.zip and you can view the contents
of this archive directly in File Explorer.&lt;/p&gt;

&lt;h2 id=&quot;what-are-runtimes&quot;&gt;What are “runtimes”?&lt;/h2&gt;

&lt;p&gt;In NuGet, “runtimes” is essential synonymous with “operating systems”. Don’t confuse
this with how .NET uses the word (e.g. the .NET runtime != NuGet runtimes.)&lt;/p&gt;

&lt;p&gt;The .NET Core docs page also include an explanation of this.
&lt;a href=&quot;http://dotnet.github.io/docs/core-concepts/rid-catalog.html&quot;&gt;http://dotnet.github.io/docs/core-concepts/rid-catalog.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-rid&quot;&gt;What is a RID?&lt;/h2&gt;
&lt;p&gt;Runtime identifier, or the specific moniker for a specific runtime. It usually includes name, version, and bitness.&lt;/p&gt;

&lt;p&gt;Example: “win10-x64” is the RID for “Windows 10, 64bit”.&lt;/p&gt;

&lt;p&gt;Example 2: “win10-x64-aot” is the RID used specially for Universal Windows Platform apps
that have been compiled with .NET Native. AOT = Ahead Of Time. All UWP apps are compiled
with the .NET Native compiler before being published to the Windows Store. This special
RID was included to accommodate special changes to .NET Core itself to make it compatible
with .NET Native apps.&lt;/p&gt;

&lt;h2 id=&quot;what-goes-in-the-runtimes-folder&quot;&gt;What goes in the “runtimes” folder?&lt;/h2&gt;

&lt;p&gt;The runtimes folder is for operating-system specific libraries. Sometimes it is not possible
to write code that works on all operating systems. For example,
System.IO.Compression includes a library design for *nix systems and another for Windows systems.&lt;/p&gt;

&lt;p&gt;Managed libraries can be placed in folders that follow this pattern.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
runtimes/{rid}/lib/{tfm}/*.dll
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Native libraries (*.dll on Windows, *.so for Linux, *.dylib for OSX) can be included as well.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
runtimes/{rid}/native/*.(dll | so | dylib )
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;*“tfm” refers to “target framework moniker”. See &lt;a href=&quot;https://docs.nuget.org/create/targetframeworks&quot;&gt;https://docs.nuget.org/create/targetframeworks&lt;/a&gt; for a
list of available TFMs and to determine which you should use.&lt;/p&gt;

&lt;h2 id=&quot;what-runtimes-are-available-for-nuget-3&quot;&gt;What “runtimes” are available for NuGet 3?&lt;/h2&gt;
&lt;p&gt;There is no set list of “runtimes”. This list is actually generated dynamically when you restore packages.
In most cases, this list of runtimes will come from a special package called 
&lt;a href=&quot;https://www.nuget.org/packages?q=microsoft.netcore.platforms&quot;&gt;“Microsoft.NETCore.Platforms”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This package contains a special file named “runtime.json” which lists dozens of “runtimes”. Here are just a few:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“fedora.23-x64”&lt;/li&gt;
  &lt;li&gt;“win7-x86”&lt;/li&gt;
  &lt;li&gt;“linuxmint.17.3”&lt;/li&gt;
  &lt;li&gt;“ubuntu.15.04-x64”&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-is-the-rid-graph&quot;&gt;What is the RID graph?&lt;/h2&gt;

&lt;p&gt;The RID graph is a list of “runtimes” that are compatible with each other. For example, in theory
a library that is compatible with Windows 7 should also be compatible with newer version.&lt;/p&gt;

&lt;p&gt;NuGet can import compatible libraries using something called the “RID graph” or “runtime fallback graph”. 
This is basically a list of all RIDs .NET Core supports, and which RIDs are compatible with each other.
The graph definition can be found in the &lt;a href=&quot;https://github.com/dotnet/corefx/&quot;&gt;https://github.com/dotnet/corefx/&lt;/a&gt; repo.&lt;/p&gt;

&lt;p&gt;I included the RID graph used for .NET Core RC2 at the bottom of this post.&lt;/p&gt;

&lt;h2 id=&quot;how-is-the-rid-graph-used&quot;&gt;How is the RID graph used?&lt;/h2&gt;

&lt;p&gt;NuGet will use the graph to identify what “runtimes” and libraries are compatible. If there are runtimes
present in a package, but none with a package that match the exact runtime currently being used,
it will trace the graph back to the closest compatible system. For example, the list of RID fallbacks
for Windows 7 32 bit machines are as follows:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;win7-x86
win7
win-x86
win
any
base&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For example, if I use a library that has a library under &lt;code&gt;runtimes/win/lib/*.dll&lt;/code&gt; and I restore packages for 
Windows 7, 32 bit, NuGet can trace the RID graph and will fallback to the closest, most compatible RID,
 which in this case will be “win”.&lt;/p&gt;

&lt;h2 id=&quot;what-if-my-library-breaks-on-newer-operating-systems&quot;&gt;What if my library breaks on newer operating systems?&lt;/h2&gt;

&lt;p&gt;For example, what if a library that works for Windows 7 doesn’t work for Windows 10?&lt;/p&gt;

&lt;p&gt;The NuGet solution for this is to also include a library under the Windows 10 RID. This will override
the Windows 7 library. NuGet only brings in the closest matching, compatible RID.&lt;/p&gt;

&lt;h2 id=&quot;the-rc2-rid-graph&quot;&gt;The RC2 RID graph&lt;/h2&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/3f86d5eb5e4ec3840d630f94fbcb265e.js&quot;&gt; &lt;/script&gt;

</description>
        <pubDate>Thu, 19 May 2016 08:00:00 -0700</pubDate>
        <link>http://www.natemcmaster.com/blog/2016/05/19/nuget3-rid-graph/</link>
        <guid isPermaLink="true">http://www.natemcmaster.com/blog/2016/05/19/nuget3-rid-graph/</guid>
        
        
      </item>
    
      <item>
        <title>Intro to .NET Core: project.json</title>
        <description>&lt;p&gt;.NET Core introduces a new project model. A projects is defined by JSON file named “project.json”. This post will examine
some of the options available to projects.&lt;/p&gt;

&lt;h1 id=&quot;official-docs&quot;&gt;Official docs&lt;/h1&gt;

&lt;p&gt;To read the full spec, see &lt;a href=&quot;http://dotnet.github.io/docs/project-model/&quot;&gt;http://dotnet.github.io/docs/project-model/&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;projectjson&quot;&gt;Project.json&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;project.json&lt;/em&gt; defines everything about a .NET Core project. It controls the project’s platform support, references, compilation, and packaging.&lt;/p&gt;

&lt;p&gt;The best way to get a starter template is execute &lt;code&gt;dotnet new&lt;/code&gt; on the command line, or to use Visual Studio. This will create an empty project with a project.json that works for a basic library.&lt;/p&gt;

&lt;p&gt;For more advanced features of project.json, see &lt;a href=&quot;http://dotnet.github.io/docs/project-model/&quot;&gt;http://dotnet.github.io/docs/project-model/&lt;/a&gt;.&lt;/p&gt;

&lt;!-- TODO block post about advanced project.json setup --&gt;

&lt;h1 id=&quot;multi-project-setup&quot;&gt;Multi-project setup&lt;/h1&gt;

&lt;p&gt;Many projects can be build together. This is similar to a Visual Studio “Solution”.&lt;/p&gt;

&lt;h2 id=&quot;without-configuration&quot;&gt;Without configuration&lt;/h2&gt;

&lt;p&gt;Without configuration, projects are are considered part of a solution if they are in the same file directory with each other.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;solution/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    Banana.Library&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    Banana.Web&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;with-globaljson&quot;&gt;With global.json&lt;/h2&gt;

&lt;p&gt;A file named &lt;em&gt;global.json&lt;/em&gt; can be used to identify the location of projects&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;solution/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    global.json&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;    src/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        Banana.Library&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        Banana.Web&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    test/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        Banana.Test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Contents of &lt;strong&gt;global.json&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;projects&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;examples&quot;&gt;Examples&lt;/h1&gt;

&lt;h2 id=&quot;a-typical-projectjson-for-a-web-project&quot;&gt;A typical project.json for a web project&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Banana.Web&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;quot;compilationOptions&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;emitEntryPoint&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;keyFile&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;../lib.snk&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;Banana.Library&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;Microsoft.AspNetCore.Server.Kestrel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;Microsoft.AspNetCore.Mvc&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc2&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;quot;frameworks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;netcoreapp1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;quot;Microsoft.NetCore.App&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;platform&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc2&amp;quot;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;quot;tools&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;dotnet-razor-tooling&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc2&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;a-typical-projectjson-for-a-library&quot;&gt;A typical project.json for a library&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Banana.Library&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;quot;compilationOptions&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;xmlDoc&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;keyFile&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;../lib.snk&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;Newtonsoft.Json&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;8.0.1&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;quot;frameworks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;netstandard1.3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;quot;NETStandard.Library&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc2&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;prepublish&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;gen.cmd&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Tue, 29 Mar 2016 08:00:00 -0700</pubDate>
        <link>http://www.natemcmaster.com/blog/2016/03/29/project-json/</link>
        <guid isPermaLink="true">http://www.natemcmaster.com/blog/2016/03/29/project-json/</guid>
        
        
      </item>
    
      <item>
        <title>Entity Framework 7 and OS X</title>
        <description>&lt;p&gt;Back in early July, I recorded a walkthrough with &lt;a href=&quot;https://twitter.com/sethjuarez&quot;&gt;@sethjuarez&lt;/a&gt; on using &lt;a href=&quot;https://github.com/aspnet/entityframework&quot;&gt;Entity Framework 7&lt;/a&gt; and &lt;a href=&quot;https://code.visualstudio.com&quot;&gt;Visual Studio Code&lt;/a&gt;. The video was posted to Channel 9 today.&lt;/p&gt;

&lt;p&gt;For the latest details on EF 7 and OS X, follow this guide: &lt;a href=&quot;http://ef.readthedocs.org/en/latest/getting-started/osx.html&quot;&gt;Getting Started with EF 7 on OS X&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://channel9.msdn.com/Blogs/Seth-Juarez/Entity-Framework-7-Goes-Cross-Platform-with-Nate-McMaster&quot; class=&quot;btn btn-primary&quot;&gt;Watch on Channel 9&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;text-center&quot;&gt;
&lt;iframe src=&quot;https://channel9.msdn.com/Blogs/Seth-Juarez/Entity-Framework-7-Goes-Cross-Platform-with-Nate-McMaster/player&quot; width=&quot;640&quot; height=&quot;360&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

</description>
        <pubDate>Tue, 25 Aug 2015 00:00:00 -0700</pubDate>
        <link>http://www.natemcmaster.com/blog/2015/08/25/ef7-and-osx/</link>
        <guid isPermaLink="true">http://www.natemcmaster.com/blog/2015/08/25/ef7-and-osx/</guid>
        
        
      </item>
    
      <item>
        <title>Hacking ASP.NET 5 and Mono</title>
        <description>&lt;p&gt;First, it is important understand what happens when you execute &lt;code&gt;dnx&lt;/code&gt;.
Currently, the command for &lt;code&gt;dnx&lt;/code&gt; on Linux and OS X is just a shortcut to &lt;a href=&quot;https://github.com/aspnet/dnx/blob/dev/scripts/dnx.sh&quot;&gt;this script file&lt;/a&gt;.
If you inspect this 16-line file, you will see that, in most cases, &lt;code&gt;dnx&lt;/code&gt; is just an abbreviation for &lt;code&gt;mono $MONO_OPTIONS &quot;$DIR/dnx.mono.managed.dll&quot; &quot;$@&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Understanding this enables you to change how DNX runs mono in the following ways.&lt;/p&gt;

&lt;h2 id=&quot;use-the-monooptions-variable-to-pass-runtime-flags-to-mono&quot;&gt;Use the MONO_OPTIONS variable to pass runtime flags to mono&lt;/h2&gt;

&lt;p&gt;This is useful if you need to alter the way DNX bootstraps mono. Here are some useful examples.&lt;/p&gt;

&lt;h3 id=&quot;find-out-which-version-of-mono-dnx-is-using&quot;&gt;Find out which version of Mono DNX is using&lt;/h3&gt;

&lt;p&gt;Execute &lt;code&gt;MONO_OPTIONS=--version dnx&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;debug-and-get-a-more-detailed-stack-trace&quot;&gt;Debug and get a more detailed stack trace&lt;/h3&gt;
&lt;p&gt;Execute &lt;code&gt;MONO_OPTIONS=--debug dnx . run&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;change-the-mono-runtime&quot;&gt;Change the mono runtime&lt;/h2&gt;

&lt;p&gt;If you have multiple versions of mono installed, it may be useful to change which version mono is using. 
DNX will &lt;a href=&quot;https://github.com/aspnet/dnx/blob/dev/scripts/dnx.sh&quot;&gt;first look within the runtime folder&lt;/a&gt; for an executable mono. If not, it will use the system default.
You can override the system default mono by adding a symbolic link into the runtime folder.&lt;/p&gt;

&lt;p&gt;For example, I have a custom build of mono in my home directory, but also have a system installation of Mono (so I can use Xamarin Studio).&lt;/p&gt;

&lt;p&gt;To override, follow these steps.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Naviate to the folder containing DNX. &lt;code&gt;dirname `which dnx`&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add a symbolic link. For example, &lt;code&gt;ln -s /Users/nmcmaster/dev/mono-src/bin/mono ./&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now DNX will use &lt;code&gt;/Users/nmcmaster/dev/mono-src/bin/mono&lt;/code&gt; instead of &lt;code&gt;/usr/bin/mono&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 09 Jul 2015 00:00:00 -0700</pubDate>
        <link>http://www.natemcmaster.com/blog/2015/07/09/hacking-asp-net-5/</link>
        <guid isPermaLink="true">http://www.natemcmaster.com/blog/2015/07/09/hacking-asp-net-5/</guid>
        
        
      </item>
    
      <item>
        <title>Vagrant Recipe for Ubuntu with ASP.NET 5</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; is a command-line utility that makes it easy to setup
and configure virtual machines. This configuration is controlled with special file called a &lt;strong&gt;Vagrantfile&lt;/strong&gt;. This is a small ruby file that controls the config settings for your vm.&lt;/p&gt;

&lt;p&gt;If you do not already have Vagrant, follow their &lt;a href=&quot;http://docs.vagrantup.com/v2/getting-started/index.html&quot;&gt;Getting Started Guide&lt;/a&gt; to get setup.&lt;/p&gt;

&lt;p&gt;Add this file to the root folder of you project. Running &lt;code&gt;vagrant up&lt;/code&gt; will install a VM of Ubuntu 14 and then install all the libraries and runtime config needed to use ASP.NET 5.&lt;/p&gt;

&lt;p&gt;When you connect to the VM using &lt;code&gt;vagrant ssh&lt;/code&gt;, your project will be accessible in the folder &lt;strong&gt;/vagrant/&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
  
  config.vm.box = &amp;quot;ubuntu/trusty64&amp;quot;

  # Enable provisioning with a shell script.
  config.vm.provision &amp;quot;shell&amp;quot;, privileged: false, inline: &amp;lt;&amp;lt;-SHELL
    sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    echo &amp;quot;deb http://download.mono-project.com/repo/debian wheezy main&amp;quot; | sudo tee /etc/apt/sources.list.d/mono-xamarin.list
    sudo apt-get update
    sudo apt-get install -y mono-complete
    
    sudo apt-get install -y unzip automake libtool curl
    
    curl -sSL https://github.com/libuv/libuv/archive/v1.4.2.tar.gz | sudo tar zxfv - -C /usr/local/src
    cd /usr/local/src/libuv-1.4.2
    sudo sh autogen.sh
    sudo ./configure
    sudo make 
    sudo make install
    sudo rm -rf /usr/local/src/libuv-1.4.2 &amp;amp;&amp;amp; cd ~/
    sudo ldconfig
    
    curl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/dnvminstall.sh | DNX_BRANCH=dev sh &amp;amp;&amp;amp; source ~/.dnx/dnvm/dnvm.sh
  SHELL
end
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/natemcmaster/9b021e030c3c906bf940.js?file=Vagrantfile&quot;&gt; &lt;/script&gt;

</description>
        <pubDate>Thu, 04 Jun 2015 20:13:00 -0700</pubDate>
        <link>http://www.natemcmaster.com/blog/2015/06/04/vagrant-dnvm/</link>
        <guid isPermaLink="true">http://www.natemcmaster.com/blog/2015/06/04/vagrant-dnvm/</guid>
        
        
      </item>
    
      <item>
        <title>ASP.NET 5 and .NET Core: Slides</title>
        <description>&lt;p&gt;This presentation covers an overview of what is new from Microsoft’s ASP.NET team. For more information, checkout their official website at &lt;a href=&quot;http://asp.net&quot;&gt;asp.net&lt;/a&gt; or &lt;a href=&quot;http://github.com/aspnet/home&quot;&gt;on GitHub&lt;/a&gt;.  ■&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/codecamp_slides-5fb02198e288c795aef8be7a91bf440b.pdf&quot; class=&quot;btn btn-primary&quot;&gt;Download slides&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 14 Mar 2015 03:35:00 -0700</pubDate>
        <link>http://www.natemcmaster.com/blog/2015/03/14/codecamp-slides/</link>
        <guid isPermaLink="true">http://www.natemcmaster.com/blog/2015/03/14/codecamp-slides/</guid>
        
        
      </item>
    
      <item>
        <title>Installing ASP.NET 5 (beta 3)</title>
        <description>&lt;p&gt;The easiest, but slowest, way to install ASP.NET 5 is through Visual Studio 2015.&lt;/p&gt;

&lt;p&gt;Alternatively, you can install the command line tools by following the instructions below. These are instructions are for the &lt;strong&gt;beta 3&lt;/strong&gt; versions of the tools as posted on &lt;a href=&quot;https://github.com/aspnet/home&quot;&gt;ASP.NET 5 on GitHub&lt;/a&gt;. Beginning with &lt;strong&gt;beta 4&lt;/strong&gt; these will be obsolete.&lt;/p&gt;

&lt;h1 id=&quot;visual-studio-2015&quot;&gt;Visual Studio 2015&lt;/h1&gt;

&lt;p&gt;Go here download a free copy of &lt;strong&gt;Visual Studio 2015 CTP&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;btn btn-primary&quot; href=&quot;https://www.visualstudio.com/downloads/visual-studio-2015-ctp-vs&quot;&gt;Download Visual Studio 2015 CTP 6&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;command-line-tools&quot;&gt;Command Line Tools&lt;/h1&gt;

&lt;p&gt;These instructions are found in more complete form on the &lt;a href=&quot;https://github.com/aspnet/home&quot;&gt;ASP.NET 5 Home&lt;/a&gt; GitHub repository.&lt;/p&gt;

&lt;h2 id=&quot;windows&quot;&gt;Windows&lt;/h2&gt;
&lt;p&gt;Execute the following in &lt;em&gt;Command Prompt&lt;/em&gt; (cmd.exe)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;powershell -NoProfile -ExecutionPolicy unrestricted -Command &lt;span class=&quot;s2&quot;&gt;&amp;quot;iex ((new-object net.webclient).DownloadString(&amp;#39;https://raw.githubusercontent.com/aspnet/Home/master/kvminstall.ps1&amp;#39;))&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;os-x&quot;&gt;OS X&lt;/h2&gt;
&lt;p&gt;You must have &amp;gt;= Mono 3.6.0 installed.&lt;/p&gt;

&lt;p&gt;If you have &lt;a href=&quot;http://brew.sh&quot;&gt;brew&lt;/a&gt;, the following will the correct version of Mono and the KVM. Execute these in the Terminal.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;brew tap aspnet/k
brew install kvm
&lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;kvm.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;linux&quot;&gt;Linux&lt;/h2&gt;
&lt;p&gt;You must have Mono 3.4.1 or greater installed. Execute these on the command line.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;curl -sSL https://raw.githubusercontent.com/aspnet/Home/master/kvminstall.sh &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sh &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.k/kvm/kvm.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;beta-4&quot;&gt;Beta 4&lt;/h1&gt;
&lt;p&gt;K, KRE, KVM, and KLR were all placeholder names. They have all been renamed in beta 4, but are stable as of March 14, 2015.  ■&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Mar 2015 02:10:00 -0700</pubDate>
        <link>http://www.natemcmaster.com/blog/2015/03/14/installing-aspnet5/</link>
        <guid isPermaLink="true">http://www.natemcmaster.com/blog/2015/03/14/installing-aspnet5/</guid>
        
        
      </item>
    
      <item>
        <title>My Favorite Sublime Text 3 Plugins</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime Text 3&lt;/a&gt; is my favorite text editor and has been for years. One of the best features is its extensibility. There are thousands of packages available. To install them, checkout &lt;a href=&quot;https://packagecontrol.io&quot;&gt;packagecontrol.io&lt;/a&gt;. Here are my favorite Sublime Text 3 plugins.&lt;/p&gt;

&lt;h2 id=&quot;jsformathttpspackagecontroliopackagesjsformat&quot;&gt;1. &lt;a href=&quot;https://packagecontrol.io/packages/JsFormat&quot;&gt;JsFormat&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you write JavaScript as much as I do, it’s handy to quickly and easily format your code. This plugin adds a new shortcut, Ctrl+Alt+F to format your code.&lt;/p&gt;

&lt;h2 id=&quot;theme---el-capitanhttpspackagecontroliopackagestheme20-20el20capitan&quot;&gt;2. &lt;a href=&quot;https://packagecontrol.io/packages/Theme%20-%20El%20Capitan&quot;&gt;Theme - El Capitan&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This theme makes ST3 feel at home in Os X Yosemite.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://packagecontrol.io/readmes/img/501ed397b43071998ece2f048086d9d32863673d.png&quot; alt=&quot;El Capitan Screenshot&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;package-controlhttppackagecontrolio&quot;&gt;3. &lt;a href=&quot;http://packagecontrol.io&quot;&gt;Package Control&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Install packages from the Command Palette.&lt;/p&gt;

&lt;h2 id=&quot;taghttpspackagecontroliopackagestag&quot;&gt;4. &lt;a href=&quot;https://packagecontrol.io/packages/Tag&quot;&gt;Tag&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Helps quick (and correctly) format your HTML and XML documents.&lt;/p&gt;

&lt;h2 id=&quot;select-quotedhttpspackagecontroliopackagesselect20quoted&quot;&gt;5. &lt;a href=&quot;https://packagecontrol.io/packages/Select%20Quoted&quot;&gt;Select Quoted&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This little nugget of a package adds on simple, but frequently useful keyboard shortcut: Cmd+’ for “Expand Selection To Quoted”&lt;/p&gt;

&lt;h2 id=&quot;sublime-code-intelhttpspackagecontroliopackagessublimecodeintel&quot;&gt;6. &lt;a href=&quot;https://packagecontrol.io/packages/SublimeCodeIntel&quot;&gt;Sublime Code Intel&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It doesn’t always work well, but when it does, it is one of the better auto-complete engines for Python and NodeJS.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-enhancementshttpspackagecontroliopackagessidebarenhancements&quot;&gt;7. &lt;a href=&quot;https://packagecontrol.io/packages/SideBarEnhancements&quot;&gt;Sidebar Enhancements&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;No Sublime Text installation is complete without these enhancements. Frankly, these should come default in Sublime. Fortunately, @titeando was nice enought to build it for us.&lt;/p&gt;

&lt;h2 id=&quot;sassbeautifyhttpspackagecontroliopackagessassbeautify&quot;&gt;8. &lt;a href=&quot;https://packagecontrol.io/packages/SassBeautify&quot;&gt;SassBeautify&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;And finally, SassBeautify. If this package only formatted SASS it wouldn’t be in the my list. But this adds a crucial feature. SassBeautify can convert easily between CSS, SCSS, and SASS from the Command Palette. This has come in especially handy when taking someone elses clunky CSS and attempting to slim it down to SASS.&lt;/p&gt;

&lt;p&gt;Of course, there are many more packages available, including my favorite color schemes and some useful language-highlighting packages. But these above are the packages I could not code as effectively without. ■&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Mar 2015 11:30:00 -0800</pubDate>
        <link>http://www.natemcmaster.com/blog/2015/03/05/st3-plugins/</link>
        <guid isPermaLink="true">http://www.natemcmaster.com/blog/2015/03/05/st3-plugins/</guid>
        
        
      </item>
    
      <item>
        <title>Blogging with Jekyll and GitHub Pages</title>
        <description>&lt;p&gt;I host this blog for free. I don’t worry about hosting plans, bandwidth, or others common website concerns. How? To get this setup, you will need to be a little proficient with these tools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Git&lt;/li&gt;
  &lt;li&gt;The command line&lt;/li&gt;
  &lt;li&gt;Markdown or HTML&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;free-hosting-thanks-to-pagesgithubcomhttppagesgithubcom&quot;&gt;Free Hosting (thanks to &lt;a href=&quot;http://pages.github.com&quot;&gt;pages.github.com&lt;/a&gt;)&lt;/h2&gt;

&lt;p&gt;GitHub provides a way for developers to post free webpages. This requires a little bit of hacking, but it is not too difficult. Their instructions are so simple, that rather than duplicate them here, I will just point you to their website.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;Setup free hosting with GitHub Pages&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;generating-pages-with-jekyll&quot;&gt;Generating Pages with Jekyll&lt;/h2&gt;
&lt;p&gt;GitHub pages requires that you serve static content only. For those update their blogs infrequently and don’t need a complicated web service, static content works just fine. This blog is generated using &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, which is a light framework written in Ruby for generating content.&lt;/p&gt;

&lt;p&gt;Jekyll is setup to generated blogs&lt;/p&gt;

&lt;h2 id=&quot;customizing-jekyll&quot;&gt;Customizing Jekyll&lt;/h2&gt;
&lt;p&gt;By default, GitHub will run Jekyll when you push your content and generate the HTML for you. Jekyll supports &lt;a href=&quot;http://jekyllrb.com/docs/plugins/#available-plugins&quot;&gt;some powerful plugins&lt;/a&gt;, but to run these you must commit the generated content to your GitHub branch instead of the Jekyll code.&lt;/p&gt;

&lt;h2 id=&quot;my-setup&quot;&gt;My setup&lt;/h2&gt;
&lt;p&gt;For this blog, I have setup a separate folder within my project where Jekyll builds the content. This folder is configured as a git submodule for the same repo as the parent project.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;k&quot;&gt;[submodule &amp;quot;build&amp;quot;]&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    url = git@github.com:natemcmaster/natemcmaster.github.io.git&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    branch = master&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I added a simple &lt;strong&gt;Makefile&lt;/strong&gt; to simplify the build and publishing process.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-make&quot; data-lang=&quot;make&quot;&gt;&lt;span class=&quot;nv&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./build

&lt;span class=&quot;nf&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;publish&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j_build&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;j_build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    jekyll build

&lt;span class=&quot;nf&quot;&gt;serve&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    @open http://localhost:4000
    jekyll serve --watch

&lt;span class=&quot;nf&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j_build&lt;/span&gt;
    git --git-dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;DIR&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/.git add --all
    git --git-dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;DIR&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/.git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;Build `date`&amp;quot;&lt;/span&gt;
    git --git-dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;DIR&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/.git push
    git add build/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Happy blogging! ■&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Mar 2015 08:00:00 -0800</pubDate>
        <link>http://www.natemcmaster.com/blog/2015/03/01/blogging-with-jekyll/</link>
        <guid isPermaLink="true">http://www.natemcmaster.com/blog/2015/03/01/blogging-with-jekyll/</guid>
        
        
      </item>
    
      <item>
        <title>The Empire Reboots</title>
        <description>&lt;p&gt;Although I have only worked for Microsoft as an intern, there was a noticeable difference between the first summer (Ballmer Dynasty) and the second (Nadella Era). Part of that difference was a more innovative atmosphere among leaders and fellow devs. Can Satya turn around the decline of Microsoft? I have no crystal ball, but his leadership is a step in the right direction.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;(Satya Nadella) looks the part of a modern technology C.E.O., certainly more than Gates does now or than Ballmer ever did. In Apple’s famous 2006 commercial, in which the staid, uninteresting guy is the P.C. and the hip, cool one is the Mac, Nadella would play the Mac. He is fit, with closely cropped hair. He wears black-rimmed glasses and has even been seen in a hoodie. In his short tenure, he has already used a metaphor with overtones of Zen to explain to the troops what he wants (“a team of rowers working together at the highest level”). One of the reasons the board chose him, according to someone familiar with the process, was that he was an “insider who had the best of what an outsider could bring.” He actually talks to people outside the company, from competitors to venture capitalists. This is unusual in a company that people describe as insular. “You talk about the rise and fall of empires or families or anything; being insular is the best way to sort of kill yourself,” says Nadella.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://www.vanityfair.com/business/2014/11/satya-nadella-bill-gates-steve-ballmer-microsoft&quot;&gt;The Empire Reboots&lt;/a&gt; from Vanity Fair. ■&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Oct 2014 00:00:00 -0700</pubDate>
        <link>http://www.natemcmaster.com/blog/2014/10/08/vanity-fair-microsoft-reboot/</link>
        <guid isPermaLink="true">http://www.natemcmaster.com/blog/2014/10/08/vanity-fair-microsoft-reboot/</guid>
        
        
      </item>
    
  </channel>
</rss>
